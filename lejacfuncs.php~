<?php

//----------------------------------------------------------------------------------------------------------
// Function to return level values in array
// Pass in ID to parse.  This parses out value within decomal and returns as 
// array.  
//----------------------------------------------------------------------------------------------------------
function GetLevelValues($selectID) 
{
	$result = "";
	
	if ($selectID == "")
		return $result;
		
	$result = explode(".", $selectID);

	return $result;
	
} // end of GetLevelValues

//----------------------------------------------------------------------------------------------------------
// Function to return new select passed value. Pass in IDX to  level and select id to parse and 
// change and teh value to change to.  
//----------------------------------------------------------------------------------------------------------
function BuildNewSelectValue($selectID, $levelIDX, $value) 
{
		
	if ($levelIDX == 0)
	{
		$levelIDX = 1;
	}	
	//
	// Get the parms broken out into array
	//
	$passedValues = GetLevelValues($selectID);

	//
	// Add new value to current values at level
	//
	$passedValues[$levelIDX] = $value;
	
	//
	//rebuild value
	//
	$result = implode(".", $passedValues);

	return $result;

} // end of BuildNewSelectValue

//----------------------------------------------------------------------------------------------------------
// Function to return html for top tabs
// Pass in selct values to parse.  This builds html and returns string. 
//----------------------------------------------------------------------------------------------------------
function GetMainNav($selectID) 
{
	global $NavTitle;
    global $NavToolTipMsg;
	global $MainNavTabUpperWidth;
    global $ToolTips;
	
	
	$result = "<table class=\"MainNavTabsUpper\" >
		<tr>";

	//
	// First build the upper part of the Nav.  This count will give us only top elements.
	// Subsequent counts of sub menus must subtract out 1 for top menus inclusion as x.0.0.0
	//
	$c = count($NavTitle);
	
	//
	// call routine to put values into array. Index to array symbolizeses level of menu selection.
	// For this routine we only need the top level
	//
	$passValues = GetLevelValues($selectID);
	for ($i = 1; $i < $c + 1; $i++)
	{
        $DisplayToolTips = "";
        if ($ToolTips == "on")
        {
            $DisplayToolTips = "onmouseover=\"Tip('".$NavToolTipMsg[$i][0][0][0]."')\" onmouseout=\"UnTip()\"";
        }
        
		if ($i == $passValues[0])
		{
			$result .=
			"
			<td width=".$MainNavTabUpperWidth." class=\"MainNavTabsUpperCellSelect\"> 
				<a href=\"index.html?selectID=".$i.".0.0.0\" $DisplayToolTips class=\"MainNavTabsUpperCellSelect\">".$NavTitle[$i][0][0][0]."</a>
			</td>
			
			";		
		}
		else
		{
			$result .=
			"
			<td width=".$MainNavTabUpperWidth." class=\"MainNavTabsUpperCell\"> 
				<a href=\"index.html?selectID=".$i.".0.0.0\"  $DisplayToolTips class=\"MainNavTabsUpperCell\">".$NavTitle[$i][0][0][0]."</a>
			</td>
			
			";	
		}	
	} // end of for
	
	$result .= "<td >&nbsp;</td>
			</tr>
	</table>
	";
	
	//
	// FiSecond build the lower part of the Nav
	//
	$result .= "	
	<table class=\"MainNavLower\" cellspacing=0 cellpadding=0>
		<tr>
			<td width=\"100%\"> 
				&nbsp;
			</td>
		</tr>	
	</table>
	";
	
	return $result;
	
} // end of GetMainNav

//----------------------------------------------------------------------------------------------------------
// Function to return action type of select variable passed
// Pass in selct values to parse.  This returns Action 
//----------------------------------------------------------------------------------------------------------
function GetAction($selectID)
{
	global $NavTitle;
	
	//
	// Get the parms broken out into array
	//
	$tmpLevels = GetParentAndSelectLevel($selectID);
	
	//
	// Get the parms broken out into array
	//
	$passedValues = GetLevelValues($selectID);
		
	switch ($tmpLevels[1])
	{
		case 0:
			if (count($NavTitle[$passedValues[0]]) > 1)
			{
				$result = "Go";
			}
			else
			{
				$result = "Stay";
			}
			break;
			
		case 1:
			if (count($NavTitle[$passedValues[0]][$passedValues[1]]) > 1)
			{
				$result = "Go";
			}
			else
			{
				$result = "Stay";
			}
			break;
			
		case 2:
			if (count($NavTitle[$passedValues[0]][$passedValues[1]][$passedValues[2]]) > 1)
			{
				$result = "Go";
			}
			else
			{
				$result = "Stay";
			}
			break;	
			
		case 3:
			if (count($NavTitle[$passedValues[0]][$passedValues[1]][$passedValues[2]][$passedValues[3]]) > 1)
			{
				$result = "Go";
			}
			else
			{
				$result = "Stay";
			}
			break;
	} // end of switch		
	
	return $result;
	
} // end of GetAction

//----------------------------------------------------------------------------------------------------------
// Function to return parent and select level of select variable passed
// Pass in selct values to parse.  This returns parent in array 0 and select in array 1 
//----------------------------------------------------------------------------------------------------------
function GetParentAndSelectLevel($selectID)
{
	//
	// Get the selected level
	//
	$SelectedLevel = GetSelectLevel($selectID);
	
	//
	// parent level is selected minus 1 unless top
	//
	if ($SelectedLevel > 0)
	{
		$SelectedParentLevel = $SelectedLevel - 1;
	}
	else
	{
		$SelectedParentLevel = $SelectedLevel;
	}	

	
	$result[0] = $SelectedParentLevel;
	$result[1] = $SelectedLevel;
	
	return $result;
	
} // end of GetParentAndSelectLevel

//----------------------------------------------------------------------------------------------------------
// Function to return select level of select variable passed
// Pass in selct values to parse.  This returns parent in array 0 and select in array 1 
//----------------------------------------------------------------------------------------------------------

function GetSelectLevel($selectID)
{
	//
	// Get the parms broken out into array
	//
	$passedValues = GetLevelValues($selectID);
	
	//
	// Loop thru array to identify menu level selected
	//
	$c = count($passedValues);
	$SelectedLevel = 0;
	
	for ($i = $c - 1; $i >= 0; $i--)
	{	
		if ($passedValues[$i] > 0)
		{
			$SelectedLevel = $i;
			break;
		}	
	} // end of for
	
	$result = $SelectedLevel;
	
	return $result;
	
} // end of GetSelectLevel

//----------------------------------------------------------------------------------------------------------
// Function to return sub menu list
// Pass in selct level and select parms.  This returns menu list in array 
//----------------------------------------------------------------------------------------------------------
function BuildSubMenu($SelectedLevel, $selectID)
{
	global $NavTitle;
	
	
	//
	// Get the parms broken out into array
	//
	$passedValues = GetLevelValues($selectID);
	
	//
	// Loop thru array to isolate list
	//
	$c = count($passedValues);
	
	for ($i = 0; $i < $c; $i++)
	{	
		if ($i > $SelectedLevel)
		{
			$passedValues[$i] = 0;
		}	
	} // end of for
	
	//
	// Identifu menu item count
	// Loop thru array to build list
	//
	switch ($SelectedLevel)
	{
		case 0:
		//
		// This is top
		//
			$c = count($NavTitle[$passedValues[0]]);
			break;
			
		case 1:
			$c = count($NavTitle[$passedValues[0]][$passedValues[1]]);
			break;	
			
		case 2:
			$c = count($NavTitle[$passedValues[0]][$passedValues[1]][$passedValues[2]]);
			break;	
			
		case 3:
			$c = count($NavTitle[$passedValues[0]][$passedValues[1]][$passedValues[2]][$passedValues[3]]);
			break;		
	} // end oi switch		
	
	for ($i = 0; $i < $c; $i++)
	{	
		switch ($SelectedLevel)
		{
			case 0:
				$result[$i] = $NavTitle[$passedValues[0]][$i][$passedValues[2]][$passedValues[3]];
				break;
				
			case 1:
				$result[$i] = $NavTitle[$passedValues[0]][$passedValues[1]][$i][$passedValues[3]];
				break;	
				
			case 2:
				$result[$i] = $NavTitle[$passedValues[0]][$passedValues[1]][$passedValues[2]][$i];
				break;	
				
			case 3:
				$result[$i] = $NavTitle[$passedValues[0]][$passedValues[1]][$passedValues[2]][$passedValues[3]];
				break;		
		} // end oi switch		
				
	} // end of for
		
	return $result;
	
} // end of BuildSubMenu


//----------------------------------------------------------------------------------------------------------
// Function to return sub menu list tool tips
// Pass in selct level and select parms.  This returns menu tool tips list in array 
//----------------------------------------------------------------------------------------------------------
function BuildSubMenuToolTips($SelectedLevel, $selectID)
{
	global $NavToolTipMsg;
	global $ToolTips;
    
    
	//
	// Get the parms broken out into array
	//
	$passedValues = GetLevelValues($selectID);
	
	//
	// Loop thru array to isolate list
	//
	$c = count($passedValues);
	
	for ($i = 0; $i < $c; $i++)
	{	
		if ($i > $SelectedLevel)
		{
			$passedValues[$i] = 0;
		}	
	} // end of for
	
	//
	// Identifu menu item count
	// Loop thru array to build list
	//
	switch ($SelectedLevel)
	{
		case 0:
		//
		// This is top
		//
			$c = count($NavToolTipMsg[$passedValues[0]]);
			break;
			
		case 1:
			$c = count($NavToolTipMsg[$passedValues[0]][$passedValues[1]]);
			break;	
			
		case 2:
			$c = count($NavToolTipMsg[$passedValues[0]][$passedValues[1]][$passedValues[2]]);
			break;	
			
		case 3:
			$c = count($NavToolTipMsg[$passedValues[0]][$passedValues[1]][$passedValues[2]][$passedValues[3]]);
			break;		
	} // end oi switch		
	
	for ($i = 0; $i < $c; $i++)
	{	
		switch ($SelectedLevel)
		{
			case 0:
				$result[$i] = $NavToolTipMsg[$passedValues[0]][$i][$passedValues[2]][$passedValues[3]];
				break;
				
			case 1:
				$result[$i] = $NavToolTipMsg[$passedValues[0]][$passedValues[1]][$i][$passedValues[3]];
				break;	
				
			case 2:
				$result[$i] = $NavToolTipMsg[$passedValues[0]][$passedValues[1]][$passedValues[2]][$i];
				break;	
				
			case 3:
				$result[$i] = $NavToolTipMsg[$passedValues[0]][$passedValues[1]][$passedValues[2]][$passedValues[3]];
				break;		
		} // end oi switch		
				
	} // end of for
		
	return $result;
	
} // end of BuildSubMenuToolTips

//----------------------------------------------------------------------------------------------------------
// Function to return sub menu list tool tips image names
// Pass in selct level and select parms.  This returns menu tool tips image list in array 
//----------------------------------------------------------------------------------------------------------
function BuildSubMenuToolTipsImage($SelectedLevel, $selectID)
{
	global $NavToolTipImageNames;
	global $ToolTips;
    
    
	//
	// Get the parms broken out into array
	//
	$passedValues = GetLevelValues($selectID);
	
	//
	// Loop thru array to isolate list
	//
	$c = count($passedValues);
	
	for ($i = 0; $i < $c; $i++)
	{	
		if ($i > $SelectedLevel)
		{
			$passedValues[$i] = 0;
		}	
	} // end of for
	
	//
	// Identifu menu item count
	// Loop thru array to build list
	//
	switch ($SelectedLevel)
	{
		case 0:
		//
		// This is top
		//
			$c = count($NavToolTipImageNames[$passedValues[0]]);
			break;
			
		case 1:
			$c = count($NavToolTipImageNames[$passedValues[0]][$passedValues[1]]);
			break;	
			
		case 2:
			$c = count($NavToolTipImageNames[$passedValues[0]][$passedValues[1]][$passedValues[2]]);
			break;	
			
		case 3:
			$c = count($NavToolTipImageNames[$passedValues[0]][$passedValues[1]][$passedValues[2]][$passedValues[3]]);
			break;		
	} // end oi switch		
	
	for ($i = 0; $i < $c; $i++)
	{	
		switch ($SelectedLevel)
		{
			case 0:
				$result[$i] = $NavToolTipImageNames[$passedValues[0]][$i][$passedValues[2]][$passedValues[3]];
				break;
				
			case 1:
				$result[$i] = $NavToolTipImageNames[$passedValues[0]][$passedValues[1]][$i][$passedValues[3]];
				break;	
				
			case 2:
				$result[$i] = $NavToolTipImageNames[$passedValues[0]][$passedValues[1]][$passedValues[2]][$i];
				break;	
				
			case 3:
				$result[$i] = $NavToolTipImageNames[$passedValues[0]][$passedValues[1]][$passedValues[2]][$passedValues[3]];
				break;		
		} // end oi switch		
				
	} // end of for
		
	return $result;
	
} // end of BuildSubMenuToolTipsImage

//----------------------------------------------------------------------------------------------------------
// Function to return html for left nav
// Pass in selct values to parse.  This builds html and returns string. 
//----------------------------------------------------------------------------------------------------------
function GetLeftNav($selectID) 
{
	global $NavTitle;
	global $LeftNavMenuWidth;
	global $LeftNavMenuCellBackgroundColor;
	global $LeftNavMenuCellSelectBackgroundColor;
    global $ToolTips;
    global $productDir;
    
    
	//
	// Now sget the current leve and parent level index into passed values
	//
	$tmpLevelArray = GetParentAndSelectLevel($selectID);
	
	$SelectedParentLevel = $tmpLevelArray[0];
	$SelectedLevel = $tmpLevelArray[1];
	
	//
	// Get the parms broken out into array
	//
	$passedValues = GetLevelValues($selectID);
	
	//
	// Lets see if we are Go or Stay selection 
	//
	$selAction = GetAction($selectID);
	
	switch ($selAction)
	{
		//
		// Build Menu list and set selct idx 
		//
	
		case 'Go':
			$MenuTitles = BuildSubMenu($SelectedLevel, $selectID);
            $MenuToolTips = BuildSubMenuToolTips($SelectedLevel, $selectID);
            $MenuToolTipsImage = BuildSubMenuToolTipsImage($SelectedLevel, $selectID);
			$SelectedIDX = 0;
			$NewSelectedLevel = $SelectedLevel + 1;
			break;
			
		case 'Stay':
			$MenuTitles = BuildSubMenu($SelectedParentLevel, $selectID);
            $MenuToolTips = BuildSubMenuToolTips($SelectedParentLevel, $selectID);
            $MenuToolTipsImage = BuildSubMenuToolTipsImage($SelectedParentLevel, $selectID);
 			$SelectedIDX = $passedValues[$SelectedLevel];
			$NewSelectedLevel = $SelectedLevel;
			break;
	}		
	
  	//
	// Start building results string
	//
	$result = "
		<ul id=\"LeftNav-side-nav\">
		";
	
	//
	// loop thru menu items
	//
	$c = count($MenuTitles);
	
	for ($i = 0; $i < $c; $i++)
	{
        $DisplayToolTips = "";
        if ($ToolTips == "on")
        { 
            if ($MenuToolTipsImage[$i] == 'None')
            {
                 $DisplayToolTips = "onmouseover=\"Tip('$MenuToolTips[$i]')\" onmouseout=\"UnTip()\"";
            }
            else
            {
                 $DisplayToolTips = "onmouseover=\"Tip('$MenuToolTips[$i]  <br><hr><center> <img src=\'$productDir/images/$MenuToolTipsImage[$i]\' width=\'60\'> <br><br>')\" onmouseout=\"UnTip()\"";
            }
        }
        
		//
		// if selected index is also select list index (ir = 0) we do not want to select. 
		// So we build top name and only react to selected ind if > 0.
		//
		if ($i == 0)
		{
			$result .=
			"
			<li><strong>
				&nbsp;".$MenuTitles[$i]."
			</strong></li>
			";		
		}
		else if ($i == $SelectedIDX)
		{
			$result .=
			"
			<li><strong>
				<a href=\"index.html?selectID=".$selectID."\" $DisplayToolTips  >".$MenuTitles[$i]."</a>
			</strong></li>
			";		
		}
		else
		{
			//
			// since we are selected element and we know we are not top selection we must build 
			// value for new select variable if we are selected.
			//
			$NewSelect = BuildNewSelectValue($selectID, $NewSelectedLevel, $i);
			
			$result .=
			"
			<li>
				<a href=\"index.html?selectID=".$NewSelect."\" $DisplayToolTips >".$MenuTitles[$i]."</a>
			</li>
			";	
		}	
	} // end of for
	

	$result .= "</ul>";

	return $result;
	
} // end of GetLeftNav

//----------------------------------------------------------------------------------------------------------
// Function to return html for workarea
// Pass in selct values to parse.  This builds html and returns string. 
//----------------------------------------------------------------------------------------------------------
function GetWorkArea($selectID) 
{
	
	$result = "selectID = $selectID";

	return $result;
	
} // end of GetWorkArea

//----------------------------------------------------------------------------------------------------------
// Function to return true if selection is top nav only
// Pass in selct values to parse
//----------------------------------------------------------------------------------------------------------
function IsMainNavSelectOnly($selectID) 
{
	
	//
	// Get the parms broken out into array
	//
	$passedValues = GetLevelValues($selectID);

	///
	// Loop thru array to identify menu level 
	//
	$c = count($passedValues);
	$SelectedLevel = 0;
	
	for ($i = $c - 1; $i >= 0; $i--)
	{	
		if ($passedValues[$i] > 0)
		{
			$SelectedLevel = $i;
			break;
		}	
	} // end of for

	//
	// if not at lowest level then not main nav select
	//
	if ($SelectedLevel > 0)
		$result = 0;
	else
		$result = 1;
	
	return $result;
	
} // end of IsMainNavSelectOnly

//----------------------------------------------------------------------------------------------------------
// Function to return html for breadcrumb area
// Pass in selct values to parse.  This builds html and returns string. 
//----------------------------------------------------------------------------------------------------------
function GetBreadCrumbs($selectID)
{
	global $NavTitle;
	
	
	//
	// Break out values into array
	//
	$tmpLevelValue = GetLevelValues($selectID);
	
	//
	// Get parrent level
	//
	$tmpLevels = GetParentAndSelectLevel($selectID);
	$selectLevel = $tmpLevels[1];
	
	$NbrLevel = count($tmpLevelValue);
	
	//
	// Step through each level creating bread crumb
	//
	$k = 0;
	for ($i = 0; $i < $selectLevel; $i++)
	{	
		//
		// Set counter.  This will help walk us through levels
		//
		$k = $k + 1;
		for ($x = 0; $x < $k; $x++)
		{
			$tmpBCtitleValue[$x] = $tmpLevelValue[$x];
		} // end of for	
		
		//
		// Fill the rest with zeroes. In this way we work down
		//
		for ($z = $x; $z < $NbrLevel; $z++)
		{
			$tmpBCtitleValue[$z] = 0;
		} // end of for	
		
		//
		// Add selected values and actual titles to variables to build display
		//
		$tmpBCtitleValueImplode = implode(".", $tmpBCtitleValue);
		$BCtitleValue[$i] = $tmpBCtitleValueImplode;
		$BCtitle[$i] = $NavTitle[$tmpBCtitleValue[0]][$tmpBCtitleValue[1]][$tmpBCtitleValue[2]][$tmpBCtitleValue[3]];
		
	} // end of for	
	
	//
	// Now build the display variable
	//
	$DisplayBreadCrumbs = "
			<table>
				<tr>
				";
	$c = count($BCtitle);			
	for ($i = 0; $i < $c; $i++)
	{
		$DisplayBreadCrumbs .= "
			<td class=\"breadCrumb\"> 
				<a href=\"index.html?selectID=".$BCtitleValue[$i]."\" class=\"breadCrumb\">
					".$BCtitle[$i]."
				</a>
			</td>
			<td class=\"breadCrumb\">
				>
			</td>	
		";
	} // end of for 	
	
	$DisplayBreadCrumbs .= "
			</tr>
		</table>
		";
	
	//
	// Return the display string
	//
	return($DisplayBreadCrumbs);
	
} // end of GetBreadCrumbs	

//----------------------------------------------------------------------------------------------------------
// Function to return html for title banner area
// Pass in selct values to parse.  This builds html and returns string. 
//----------------------------------------------------------------------------------------------------------
function GetTitleBanner($selectID)
{
	global $NavTitle;
	
	
	//
	// Break out values into array
	//
	$tmpLevelValue = GetLevelValues($selectID);
	
	
	//
	// Add selected values and actual titles to variables to build display
	//
	$TBtitle = $NavTitle[$tmpLevelValue[0]][$tmpLevelValue[1]][$tmpLevelValue[2]][$tmpLevelValue[3]];
	

	//
	// Now build the display variable
	//
	$DisplayTitleBanner = "
			<table width=\"95%\" class=\"titleBorder\">
				<tr>
					<td> 
						".$TBtitle."
					</td>
				</tr>
			</table>
		";
		
	//
	// Return the display string
	//
	return($DisplayTitleBanner);
	
} // end of GetTitleBanner	

?>
